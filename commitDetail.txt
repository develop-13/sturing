커밋사항: JoiningStudy - feedback(게시판 탭) 구현

만약 클라이언트의 데이터 구조와 서버에서의 데이터 구조가 달랐다면?
각 데이터 구조에서 갖고 있는 정보가 다른 부분이 많았다면? 

현재는 클라이언트의 데이터와 서버에서의 데이터가 어느정도 일치해서 
구현상 어려움이 덜하다. 

페이지에 하나의 엔터티에 대응되는 값이 상탯값으로 존재(여기서는 JoiningStudy)
하고  페이지에서 하위 컴포넌트들의 필요로 하는 부분을 props로 뿌려주는 구조라고 했을 때, 

엔터티의 어느 한 필드의 값이 변할 때 마다 새로고침하여 페이지 전체의 데이터를 다시 불러올 필요는 없다.
그냥 상탯값이 변할 때 마다 서버의 데이터만 바꿔줄 뿐 다시 전체 엔터티를 불러오지는 않는다. 
어차피 한 페이지 내에서 여러 탭이 있을 때 다른 탭으로 왔다갔다 한다고 해도 페이지에서 
서버에서 받은 엔터티를 stqte값으로 갖고 페이지는 각 탭에 해당하는 부분들을
하위 컴포넌트로 두므로 탭을 전환해도 상태는 변하지 않기에 정보가 날아가지 않음


하지만 페이지 내에 어떤 하위 컴포넌트에서 서버로 post 요청을 보냈을 때,
같은 페이지 내에 있지만, 서로 멀리 떨어진 하위 컴포넌트의 값이 바뀌는 경우에는..? 
post 요청을 받았을 때 전체 페이지를 다시 랜더링해서 서버에서 받은 데이터를 다시 뿌려줘야 하나? 
그러면 깜빡임이 심하지 않을까? 

지금은 일단 멀리 떨어진 컴포넌트라도 어쨌든 한 페이지 내에 상탯값으로 있는거니까
클라이언트에서 데이터를 먼저 바꿔줌... 

+ 다음 부터는 서버에서 쓰는 데이터 타입과 클라이언트에서 쓰는 데이터 타입을
구분하여 정의하자

+ 라우트 핸들러에서 한 요청에 대해 같은 post 요청이 여러개 있어서
하나의 post 핸들러만으로는 요청들을 모두 대응하기 어려운 부분이 있었다..
json 을 받는 경우와 formData를 받는 경우 처리를 다르게 해줘야 했는데 
내가 짠 코드는 이미 유지보수하기가 어렵게 되어있었다.

지금은 api/formData/route.ts 를 생성해서 처리하게끔 하자..