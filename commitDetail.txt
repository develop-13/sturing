커밋사항: 
-- 리팩토링 --board 상태 변경 로직을 hook으로 뺌
useReducer랑 비교했을 때? 

상태변경 로직을 커스텀 훅으로 뺴는 방식과 useReducer을 사용하는 방식을 비교했을 때,
상태변경로직은 상태 변경로직 안에 useEffect같은 훅을 사용할 수 있는 것 처럼
좀 더 범용성있게 사용할 수 있다는 장점,

그리고 커스텀 훅에 서버로직도 포함할 수 있어서 좀 더 중요 로직을 한 곳에 집중시켜서
유지보수가 좀 더 나은 것 같다.

하지만 상태를 변경하는 handler함수를 사용하는 부분에서
상태가 바뀌면  handler함수도 계속 바뀌니까 handler함수를 하위 컴포넌트로 넘겨줌에 있어서는 랜더링 부분에서 별로 안좋은 것 같아.

useReducer은 상태로직을 한 곳에 몰아넣는 다는 점은 같지만 클라이언트의 상태로직만을
다루고, useReducer내에서 다른 리액트 훅이나 비동기 코드를 사용할 수 없으니까
사용 범위가 너무 제한 적인 것 같다.

useReducer가 커스텀 훅보다 나은 점은,
상태를 변경하는 dispatch함수의 값이 바뀌지 않기 때문에 하위 컴포넌트로 disaptch를 포함하는 함수를 넘겨줄 때, 랜더링 최적화가 더 낫다는 점 뿐인 것 같다.

추후 다른 부분에서의 최적화 => 커스텀 훅안에다가 useReducer 적용
